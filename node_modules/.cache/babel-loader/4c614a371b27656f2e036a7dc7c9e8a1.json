{"ast":null,"code":"var _jsxFileName = \"D:\\\\weather_widget\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import WeatherForecast from './WeatherForecast.js';\n\nimport WeatherWidget from './weather_app_component/weatheWidget.js';\nconst key = 'cdc11e06be4ca20a5d82b9327816fbe2';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const weatherapi = await fetch('https://api.openweathermap.org/data/2.5/weather?q=Ahmedabad,in&APPID=' + key + '&units=metric');\n      const response = await weatherapi.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        icon: undefined,\n        main: response.main,\n        celsius: response.main.temp,\n        maxtemp: response.main.temp_max,\n        mintemp: response.main.temp_min,\n        desc: response.weather[0].main,\n        icon: this.weathericon.Thunderstorm\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      maxtemp: undefined,\n      mintemp: undefined,\n      desc: undefined,\n      weathericon: undefined\n    };\n    this.getWeather();\n    this.weathericon = {\n      \"Thunderstorm\": \"wi-thunderstorm\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WeatherWidget, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      maxtemp: this.state.maxtemp,\n      mintemp: this.state.mintemp,\n      desc: this.state.desc,\n      weathericon: this.state.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/weather_widget/src/App.js"],"names":["React","WeatherWidget","key","App","Component","constructor","getWeather","weatherapi","fetch","response","json","console","log","setState","city","name","country","sys","icon","undefined","main","celsius","temp","maxtemp","temp_max","mintemp","temp_min","desc","weather","weathericon","Thunderstorm","state","calCelsius","cel","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAEA,MAAMC,GAAG,GAAG,kCAAZ;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;;AADW,SA4BbC,UA5Ba,GA4BA,YAAU;AACrB,YAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,0EAAyEN,GAAzE,GAA8E,eAA/E,CAA9B;AACA,YAAMO,QAAQ,GAAG,MAAMF,UAAU,CAACG,IAAX,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAGL,QAAQ,CAACM,IADJ;AAEZC,QAAAA,OAAO,EAAGP,QAAQ,CAACQ,GAAT,CAAaD,OAFX;AAGZE,QAAAA,IAAI,EAAEC,SAHM;AAIZC,QAAAA,IAAI,EAAEX,QAAQ,CAACW,IAJH;AAKZC,QAAAA,OAAO,EAACZ,QAAQ,CAACW,IAAT,CAAcE,IALV;AAMZC,QAAAA,OAAO,EAACd,QAAQ,CAACW,IAAT,CAAcI,QANV;AAOZC,QAAAA,OAAO,EAAChB,QAAQ,CAACW,IAAT,CAAcM,QAPV;AAQZC,QAAAA,IAAI,EAAClB,QAAQ,CAACmB,OAAT,CAAiB,CAAjB,EAAoBR,IARb;AASZF,QAAAA,IAAI,EAAC,KAAKW,WAAL,CAAiBC;AATV,OAAd;AAWD,KA5CY;;AAEX,SAAKC,KAAL,GAAW;AACTjB,MAAAA,IAAI,EAACK,SADI;AAETH,MAAAA,OAAO,EAAEG,SAFA;AAGTD,MAAAA,IAAI,EAAEC,SAHG;AAITC,MAAAA,IAAI,EAAED,SAJG;AAKTE,MAAAA,OAAO,EAACF,SALC;AAMTI,MAAAA,OAAO,EAACJ,SANC;AAOTM,MAAAA,OAAO,EAACN,SAPC;AAQTQ,MAAAA,IAAI,EAACR,SARI;AASTU,MAAAA,WAAW,EAACV;AATH,KAAX;AAYA,SAAKb,UAAL;AACA,SAAKuB,WAAL,GAAmB;AACjB,sBAAgB;AADC,KAAnB;AAID;;AAEHG,EAAAA,UAAU,CAACV,IAAD,EAAM;AACd,QAAIW,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,GAAC,MAAhB,CAAV;AACA,WAAOW,GAAP;AACD;;AAsBCG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACC,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWjB,IADlB;AAEC,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWf,OAFrB;AAGC,MAAA,YAAY,EAAE,KAAKe,KAAL,CAAWV,OAH1B;AAIC,MAAA,OAAO,EAAI,KAAKU,KAAL,CAAWR,OAJvB;AAKC,MAAA,OAAO,EAAI,KAAKQ,KAAL,CAAWN,OALvB;AAMC,MAAA,IAAI,EAAG,KAAKM,KAAL,CAAWJ,IANnB;AAOC,MAAA,WAAW,EAAI,KAAKI,KAAL,CAAWb,IAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CADF;AAeD;;AA/D8B;;AAqEjC,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import WeatherForecast from './WeatherForecast.js';\nimport WeatherWidget from './weather_app_component/weatheWidget.js';\n\nconst key = 'cdc11e06be4ca20a5d82b9327816fbe2';\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city:undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius:undefined,\n      maxtemp:undefined,\n      mintemp:undefined,\n      desc:undefined,\n      weathericon:undefined,\n\n    };\n    this.getWeather();\n    this.weathericon = {\n      \"Thunderstorm\": \"wi-thunderstorm\",\n\n    };\n  }\n\ncalCelsius(temp){\n  let cel = Math.floor(temp-273.15);\n  return cel;\n}\n\n\n\n  getWeather = async() =>{\n    const weatherapi = await fetch('https://api.openweathermap.org/data/2.5/weather?q=Ahmedabad,in&APPID=' +key+ '&units=metric')\n    const response = await weatherapi.json();\n    console.log(response);\n\n    this.setState({\n      city : response.name,\n      country : response.sys.country,\n      icon: undefined,\n      main: response.main,\n      celsius:response.main.temp,\n      maxtemp:response.main.temp_max,\n      mintemp:response.main.temp_min,\n      desc:response.weather[0].main,\n      icon:this.weathericon.Thunderstorm\n     })\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <WeatherWidget\n         city={this.state.city} \n         country={this.state.country}\n         temp_celsius={this.state.celsius}\n         maxtemp = {this.state.maxtemp}\n         mintemp = {this.state.mintemp}\n         desc= {this.state.desc}\n         weathericon = {this.state.icon}\n         ></WeatherWidget>\n      </header>\n    </div>\n    );\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}